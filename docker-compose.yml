---
version: "3.4"

services:
  rustfuif:
    image: bartwillems/rustfuif:latest
    environment:
      RUST_LOG: "actix_server=debug,actix_web=debug,rustfuif=debug"
      DATABASE_URL: "postgres://rustfuif:secret@postgres/rustfuif-dev"
      API_HOST: "0.0.0.0"
      API_PORT: 8080
      SESSION_PRIVATE_KEY: "iWFlSj6XbLfB3YsdVZbs6FWUkl45eKEnOVUcv3IVOnWmTwhwEt3MjOdNXjaw3VXI%"
      OPENTELEMETRY_AGENT: "127.0.0.1:6831"
      REDIS_URL: "redis://redis"
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "http://localhost:8080/api/health"
      timeout: 10s
      interval: 10s
      retries: 10
    depends_on:
      - postgres
    networks:
      - backend
    ports:
      - 8080:8080

  postgres:
    image: postgres:12
    environment:
      POSTGRES_DB: "rustfuif-dev"
      POSTGRES_USER: "rustfuif"
      POSTGRES_PASSWORD: "secret"
    networks:
      - backend
    volumes:
      - rustfuif_postgres:/var/lib/postgresql/data
    healthcheck:
      test:
        - "CMD"
        - "pg_isready"
        - "-d"
        - "rustfuif-dev"
        - "-U"
        - "rustfuif"
      timeout: 30s
      interval: 10s
      retries: 10
    ports:
      - 5432:5432

  redis:
    image: "redis:alpine"
    ports:
      - 6379:6379
    networks:
      - backend

  jaeger:
    image: jaegertracing/all-in-one
    environment:
      SPAN_STORAGE_TYPE: memory
    networks:
      - backend
    ports:
      - 6831:6831/udp
      - 16686:16686

  prometheus:
    image: prom/prometheus:v2.20.1
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - backend

networks:
  backend:

volumes:
  rustfuif_postgres:
